<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="JudaMap">
	
	<select id="getGoodsList" parameterType="GoodsTypeVO" resultType="GoodsVO">
		SELECT * 
		FROM GOODS
		<if test="goods_type!='전체'">
		WHERE goods_type = #{goods_type}
		</if>
		ORDER BY ${goods_sort}
	</select>

	<insert id="insertMember" parameterType="MemberVO">
		INSERT INTO Member (member_id, password, name, gender, tel, email, birth, signin_date, agree_email, agree_sns) 
		VALUES (#{member_id}, #{password}, #{name}, #{gender}, #{tel}, #{email}, #{birth}, sysdate, #{agree_email}, #{agree_sns})
	</insert>

	<select id="selectLogin" parameterType="LoginVO" resultType="int">
		SELECT			count(*)
		FROM			Member
		WHERE			member_id = #{member_id} AND password = #{password}
	</select>

	<select id="getGoods" parameterType="Integer" resultType="GoodsVO">
      SELECT * FROM Goods
      WHERE goods_id = #{goods_id}
   	</select>
 
 	<!-- 같은 상품을 또 넣을지 확인 -->  	
   	<select id="checkCart" parameterType="CartRowVO" resultType="String">
		SELECT 	count(*)
		FROM	 	Cart
		WHERE 		member_id = #{member_id} AND goods_id = #{goods_id}
	</select>

	<!-- 장바구니에 넣기  -->
	<insert id="insertCart" parameterType="CartRowVO">
		INSERT INTO Cart
		VALUES (seq_cart.nextval, #{member_id}, #{goods_id}, #{c_amount})
	</insert>
	
	<!-- 장바구니의 상품의 수량만 바꾸기 -->
	<update id="updateCart" parameterType="CartRowVO">
		UPDATE Cart
		SET c_amount = c_amount + #{c_amount}
		WHERE member_id = #{member_id} AND goods_id = #{goods_id}
	</update>
	
	<!-- 장바구니를 띄울 때 필요한 정보 가져오기 -->
	<select id="getCart" parameterType="String" resultType="CartVO">
		SELECT c.C_AMOUNT AS C_AMOUNT, g.goods_id goods_id, g.GOODS_NAME GOODS_NAME, g.IMG_FILE IMG_FILE, g.PRICE PRICE, g.DELIVERY_CHARGE DELIVERY_CHARGE
		FROM Cart c INNER JOIN GOODS g 		ON c.GOODS_ID = g.GOODS_ID
					INNER JOIN "MEMBER" m 	ON c.MEMBER_ID = m.MEMBER_ID
		WHERE m.MEMBER_ID = #{member_id}
	</select>
   	
   	<!-- 카트에서 삭제 -->
	<delete id="deleteCart" parameterType="CartRowVO">
		DELETE FROM Cart 
		WHERE member_id = #{member_id} AND goods_id = #{goods_id}
	</delete>
	
	<!-- [ 메인 ] 주간 순위 -->
	<select id="selectRank" resultType="RankVO">
	SELECT   img_file, goods_name, price
	FROM   	  goods
	WHERE   goods_id IN ( SELECT goods_id 
	              FROM ( SELECT   goods_id, count(*) count
	              FROM      pay_detail
	              GROUP BY   goods_id
	              ORDER BY   count(*) DESC) rank
	                  <![CDATA[WHERE rownum < 4]]>)
	</select>

   <!-- [관리자 모드] 상품 등록 -->
   <insert id="insertGoods" parameterType="GoodsVO">
      INSERT INTO GOODS (goods_id, goods_name, price, description, alcohol, volume, origin, goods_type)
      VALUES
      (#{goods_id}, #{goods_name}, #{price},
      #{description}, #{alcohol}, #{volume}, #{origin}, #{goods_type})
   </insert>


	<!-- [관리자 모드] 재고 관리 : 정보 가져오기 -->
	<select id="selectStock" resultType="StockVO">
	   SELECT STOCK_ID, GOODS_ID, STOCK_IN_DATE, EXPECTED_RELEASE, EXPECTED_STOCK, ACTUAL_STOCK, ACTUAL_RELEASE
	   FROM STOCK
	</select>

<!-- ===================================================================================== -->

	<!--[ 결제 ]-->
	
	<!-- 카트의 상품 목록을 결제창에 띄우기 -->
	<select id="getPayCart" parameterType="CartSelectedRowsVO" resultType="CartVO">
		SELECT c.C_AMOUNT AS C_AMOUNT, g.goods_id goods_id, g.GOODS_NAME GOODS_NAME, g.IMG_FILE IMG_FILE, g.PRICE PRICE, g.DELIVERY_CHARGE DELIVERY_CHARGE
		FROM Cart c INNER JOIN GOODS g 		ON c.GOODS_ID = g.GOODS_ID
					INNER JOIN "MEMBER" m 	ON c.MEMBER_ID = m.MEMBER_ID
		WHERE m.MEMBER_ID = #{member_id} AND g.goods_id in
		<foreach collection="goods_ids" item="item" index="index" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>
	
	<!-- 결제할 상품을 바로 결제창에 띄우기 -->
	<select id="getPayOne" parameterType="String" resultType="CartVO">
		SELECT goods_id, img_file, goods_name, price, delivery_charge
		FROM Goods
		WHERE member_id = #{member_id}
	</select>
	
	<!-- 회원 정보를 결제창에 올리기 -->
	<select id="getMember" parameterType="String" resultType="HashMap">
		SELECT name, tel, email
		FROM Member
		WHERE member_id = #{member_id}
	</select>
	
	<!-- 주문 테이블에 정보 입력 -->
	<insert id="insertPayList" parameterType="PayListVO">
		INSERT INTO PayList
		VALUES (seq_payList.nextval, '결제완료', sysdate, #{p_sum}, #{member_id}, #{delivery_name}, #{receiver}, #{delivery_tel}, #{postcode}, #{addr}, #{addr_detail}, #{delivery_memo})
	</insert>
	
	<!-- 주문상세 테이블에 정보 입력 -->
	<insert id="insertPay_Detail" parameterType="CartRowVO">
		INSERT INTO Pay_Detail
		VALUES (seq_pay_detail.nextval, #{c_amount}, 
			(SELECT p_id FROM 
				(SELECT p_id FROM PAYLIST WHERE member_id=#{member_id} ORDER BY p_id DESC)
			WHERE rownum = 1),
			#{goods_id})
	</insert>
	
	<!-- 결제 후 카트 삭제 -->
	<delete id="deletePayCart" parameterType="CartSelectedRowsVO">
		DELETE FROM Cart
		WHERE member_id = #{member_id} AND goods_id IN 
		<foreach collection="goods_ids" item="item" index="index" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>

</mapper>